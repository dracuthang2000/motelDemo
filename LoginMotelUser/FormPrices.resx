<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATZKuAE6T
        rnVgorzxToah/0d9mf9dnLX5Vpq1zwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFiq
        xgBarMdSitfr53u90/9npb3/j9js/G+/2KN1l10BZIxJAWSMSQFkjEkBZIxJAWSMSQFkjEkBZIxJAWSM
        SQGIMAAAWqfAF3C/2IKG0ufqitTo+HrJ37Njs808hqp0Uoyxe4SMsnuEjLJ7hIyxe4SMsnyEjbJ8hI2y
        fISNsnyEjLJ8hJe7h42UwKCufMTQ6YrV5vaCu67Fo8WXcpW6h7G53LX5ud21+rndtfq63bb6udy1+rPW
        rfqz1Kz6s9Ss+rPXrfq127b7l9HL/YbM3/58v9X+kNLY/JHDq9aWu4m3veC6/r7hu/+94Lv/vOC5/7XX
        r/+81LL/zdzF/83bxP/F3L7/r9nA/5/l7/+V3vH/jtTo/57o+v94vcTil7yJt7vet/6z1az/ttmx/7bZ
        sf+60rH/8vbw////////////+/36/6/Px/+CvsT/hMLN/4TCzP+Ewsz/bKit6Ze9irez1Kz+zN3E/7rS
        sP+01a3/zdzF///////////////////////Q4NP/qc2x/7TPu//F2c3/qMuv/pK7mNCXvYq3s9Ss/svc
        w/+50rD/tNWt/83cxP//////////////////////zt3F/7bXrv+707D/y9zC/7XVrf6av4u4l7yJt7ve
        t/6z1az/ttmx/7basf+807L/8vbw////////////8vbw/7vUsv+22rH/tdiw/7DUqf+73rf+l7yJt5a7
        ibe94Lr+vuG7/73gu/+94Lr/ttiw/7zUsv/O3cb/ztzG/7vTsv+22LD/veC6/73gu/++4bv/veC6/pa7
        ibeVuoexudy1+bndtfq53bX6ut22+rnctfqz1q36s9Ws+rPVrPqz1qz6udy1+rrdtvq53bX6ud21+rnc
        tfmVuoexhqp0Uoyxe4SMsnuEjLJ7hIyxe4SMsnyEjbJ8hI2yfISMsnyEjbJ8hIyyfISMsXuEjLJ7hIyy
        e4SMsXuEhqp0UnWXXQFkjEkBZIxJAWSMSQFkjEkBZIxJAWSMSQFkjEkBZIxJAWSMSQFkjEkBZIxJAWSM
        SQFkjEkBZIxJAXWXXQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/AAAD/wAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAASounAEqLpwBJiqY9Sounuk6Pq+dOjKj0Rn2a/EN5lf9Eepb/Q3mW/0eA
        nftPjqryTY6q20qLp8sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQl7MAUJezAEyUsDdRmbSsaa/H43GzyvpdmbL+TISf/0V7
        l/9PiKP/YZ+4/nK2zfdjqsPUT5ayugAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFirxgBYq8YAUKPALVyuyJCI1uvYl+Dz/37C
        1/9fm7T/TYWg/2akvP+Fyd7/meP1+3/O5MRXqcWaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWarHAFmqxwBRo8EgXK3JbHzL
        4sOM2e78lN3w/3y+0/9kobn/hMjc/5Te8f+K1+z2dsbeqlisyHEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUpckAVKXJAEyd
        ww9XqMs5a7zYhXvL48iQ3vLritLm+3/D2f6N1+v5jdvw5XfH375outVwVarJOoOkbwKDp3ADg6lwBIOp
        cASDqXAEg6lwBIOpcASDqXAEg6lwBIOpcASDqXAEg6lwBIOpcASDqXAEg6lwBIOpcASDqXAEg6lwBIOp
        cASFqGoEf6p/BW6vsg9kr8Y7aLfPfHDA18iI1enymeT2+4LQ5e1uvtW6aLbNbGSxxS1usrcKg6NvJ3+j
        azx9o2hWfaNoWH2jaFd9o2hXfaNoV32jaFd9o2hXfaNoV32jaFd9o2hXfaNoV32jaFd9o2hXfaNoV32j
        aFd9o2hXfaNoV3yiZ1eEqnBakreCY5i/lXqHu6iga7K80oXR4PKg7Pj8fMjX7W6yt8mOvqWVnsKZXaTD
        kTyDpW9bjLB7gZK3g7GSuIS1kreDs5K3g7OSt4OzkreDs5K3g7OSt4OzkreDs5K4hLOSuISzk7iEs5O4
        hLOSuISzkriEs5O4hLOTuISzkreDs5e7ibmew5TFocec0JTDqdt3ur3pgsvb9pTc7v18xdT0fLq46JnF
        ptehxpyooMOWhoKnbpCew5O4tdiv7LbZsfG12bDvtdmw77XZsO+12bDvtdmw77XZsO+12bDvttmw77bZ
        se+22bHvttmx77bZse+22bHvttmx77bZse+22bDvt9qx8LXZs/Ofzbb1jMjE94vT3/qBx9v9d7nP/4TL
        3vyM0dr7jce/9pbFqdWfxpm9gqhuoqLHmMm94Lr8v+K9/77hvP++4bz/vuG8/77hvP++4bz/v+G8/77h
        vP+94Ln/t9qy/6/Sp/+y0qr/ttSu/7bUrv+y0qr/sNKo/7jbs/+637v/stu+/57Wzv+R1eD/k9vs/4DE
        2f9urcX/hsvg/5Tb7P+Q1Nz+i8a95oe6otSCqG6fosaXyLzfufy+4bv/veC6/73guv+94Lr/veC6/73g
        uv+94Lr/u964/7fasv+w0Kf/qMab/6/Hov+3y6v/t8ur/6/Hov+qxp3/t9ev/7bcu/+k1L//nt7g/5vm
        +P+V3fD/hMnd/3i60P+JzuP/mOD0/5vl9v6CyNHoaqys2IKobp+ixpfIvN+5/L7hu/+94Lv/vuG7/77h
        u/+94Lr/veC6/7rdt/+12LD/r82l/7zSsv/a5tT/5ezg/+ft4v/n7eL/4+vf/93o2P/U6M//v+DF/6PT
        wP+g4eL/o+///6Dr/f+b5Pf/l9/y/5zm+P+i7f//oe39/oLK1Oplqq7agqhun6LGmMi837j8vOC5/7jc
        tP+12K//t9uz/7vfuP+94Lr/tNiv/67Opf+70bH/2OLR//r7+f///////////////////////f78/+73
        7P/J4tL/l8W6/47Lz/+S1+b/ktfm/5LX5f+R1+T/ktfl/5PY5v+R1eT+eLrE7WKiqOCCqG6foseYyLve
        uPy43LT/sdOq/6vLof+v0af/ttqy/7zfuf+t0KX/p8Wa/9nl1P/6+/r//v7+////////////////////
        ///+//7////+/9Pj4P+GsK//dKir/3assv91q7H/daux/3Wrsf91q7H/dqyy/3Wssv5soabvY5ib44Ko
        bp+jx5jIut22/LHRqf+40q//zuDI/73Vtf+vz6b/uty1/7HRqf+vx6L/5Ozf////////////////////
        ////////////////////////4+zo/6rHuf+awa//mcKw/5m/rv+px7//t9DO/6TEuf+Zv63/mcOv/ou3
        oeJ+qpLNgqhun6PImci63LX8q8mg/8DStf/u9Oz/y9rD/6nGnf+42rP/ttSu/7fMq//n7eL/////////
        ///////////////////////////////////t8+r/x9u//77cuP+83rf/udSw/9fl0f/z9/H/zt/G/7nV
        sP+93rj9qs+h05W6hbOCqG6fo8iZyLrctfyryaD/v9K0/+3y6v/K2cH/qcad/7jas/+21K7/uMyr/+ft
        4v///////////////////////////////////////////+jv5P+70K//uNaw/7nbtP+tyKD/zdvE/+7z
        6v/C1Lf/rsuj/7vdtv2lypvKh610o4Kobp+jx5jIut22/LHRqf+30a7/zd7F/7zUtP+vz6b/uty2/7HS
        qf+wyKL/5Ozf////////////////////////////////////////////4+vf/67Hof+x0aj/uty1/67N
        pP+60rD/yd3C/7XPq/+w0Kf/ut22/KLHmMeBp22egqhun6LHmMi73rj8uNy0/7HTqv+ry6D/r9Gn/7ba
        sv+837n/rtGm/6jGm//a5dT/+vv6//7+/v///////////////////////v7+//r7+f/Z5tP/p8ab/67R
        pv+837n/ttmx/6zPo/+lyZr/r9Kn/7jbtP+73rj8oseYyIKobp+CqG6fosaYyLzfuPy84Ln/uNy0/7XY
        r/+327P/u9+4/73guv+12bD/sNCn/7zSsv/Y4tH/+vv5///////////////////////6+/n/2OLR/7zS
        sv+v0af/tdmw/73guv+73rj/ttqy/7PXrf+427P/vN+5/7zfuPyixpjIgqhun4Kobp+ixpfIvN+5/L7h
        u/+94Lv/vuG7/77hu/+94Lr/veC6/7veuP+32rL/sM6m/7zSsv/a5tT/5e3g/+fu4//n7uP/5Ozg/9rl
        1P+80rH/r86l/7fas/+737j/veC6/73guv++4bv/vuG7/77gu/++4bv/vN+5/KLGl8iCqG6fgqhun6LG
        l8i837n8vuG7/73guv+94Lr/veC6/73guv+94Lr/veC6/7zfuP+32rL/sNCn/6jGnP+wyKP/uM2s/7jN
        rP+wyKP/qMWb/67Ppf+22bH/u964/73guv+94Lr/veC6/73guv+94Lr/veC6/77hu/+837n8osaXyIKo
        bp+CqG6ioseYyb3guvy/4r3/vuG8/77hvP++4bz/vuG8/77hvP+/4bz/vuG8/73guf+32rL/r9Kn/7LS
        qv+21a//ttWv/7LSqv+v0af/ttmx/7zfuf++4bv/v+G8/77hvP++4bz/vuG8/77hvP++4bz/v+K9/73g
        uvyix5jJgqhuooKnbpCew5O4tdiv7LbZsfG12bDvtdmw77XZsO+12bDvtdmw77XZsO+12bDvttmw77bZ
        se+22bHvttmx77bZse+22bHvttmx77bZse+22bHvttmw77XZsO+12bDvtdmw77XZsO+12bDvtdmw77XZ
        sO+22bHxtdiv7J7Dk7iCp26Qg6VvW4ywe4GSt4OxkriEtZK3g7OSt4OzkreDs5K3g7OSt4OzkreDs5K3
        g7OSuISzkriEs5O4hLOTuISzkriEs5K4hLOTuISzk7iEs5K4hLOSuISzkreDs5K3g7OSt4OzkreDs5K3
        g7OSt4OzkreDs5K4hLWSt4OxjLB7gYOlb1uDo28nf6NrPH2jaFZ9o2hYfaNoV32jaFd9o2hXfaNoV32j
        aFd9o2hXfaNoV32jaFd9o2hXfaNoV32jaFd9o2hXfaNoV32jaFd9o2hXfaNoV32jaFd9o2hXfaNoV32j
        aFd9o2hXfaNoV32jaFd9o2hXfaNoWH2jaFZ/o2s8g6NvJ4OkbwKDp3ADg6lwBIOpcASDqXAEg6lwBIOp
        cASDqXAEg6lwBIOpcASDqXAEg6lwBIOpcASDqXAEg6lwBIOpcASDqXAEg6lwBIOpcASDqXAEg6lwBIOp
        cASDqXAEg6lwBIOpcASDqXAEg6lwBIOpcASDqXAEg6lwBIOncAODpG8CAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//8AD///AA///wAP//8AD///AAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////////////////////////
</value>
  </data>
</root>